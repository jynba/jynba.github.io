import{_ as s,c as i,o as t,a5 as a}from"./chunks/framework.CByBVyi2.js";const E=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"timeline/issue-60.md","filePath":"timeline/issue-60.md","lastUpdated":1734312897000}'),e={name:"timeline/issue-60.md"},n=a(`<h3 id="octokit-一个用于与-github-api-交互的工具" tabindex="-1">Octokit，一个用于与 GitHub API 交互的工具 <a class="header-anchor" href="#octokit-一个用于与-github-api-交互的工具" aria-label="Permalink to &quot;Octokit，一个用于与 GitHub API 交互的工具&quot;">​</a></h3><div class="tip custom-block"><p class="custom-block-title">原文地址</p><p><a href="https://github.com/jynba/jynba.github.io/issues/60" target="_blank" rel="noreferrer">Octokit，一个用于与 GitHub API 交互的工具 | GitHub</a></p></div><p><a href="https://github.com/octokit/octokit.js" target="_blank" rel="noreferrer">源码地址</a></p><p><a href="https://docs.github.com/zh/rest/guides/scripting-with-the-rest-api-and-javascript?apiVersion=2022-11-28" target="_blank" rel="noreferrer">文档地址</a></p><blockquote><p>如果想使用 JavaScript 编写一个脚本来与 GitHub 的 REST API 进行交互，GitHub 建议使用 Octokit.js SDK。 Octokit.js 由 GitHub 维护。 SDK 实现了最佳做法，可让你更轻松地通过 JavaScript 与 REST API 进行交互。 Octokit.js 适用于所有新式浏览器、Node.js 和 Deno。 有关 Octokit.js 的详细信息，请参阅 <a href="https://github.com/octokit/octokit.js/#readme" target="_blank" rel="noreferrer">Octokit.js 自述文件</a>。</p></blockquote><ol><li><p><a href="https://docs.github.com/zh/rest/guides/scripting-with-the-rest-api-and-javascript?apiVersion=2022-11-28#instantiating-without-authentication" target="_blank" rel="noreferrer">无需身份验证即可实例化</a> 可以在不进行身份验证的情况下使用 REST API，但速率限制较低，并且无法使用某些终结点。 若要在不进行身份验证的情况下创建 Octokit 实例，则不需要 auth 参数。</p></li><li><p>若要身份验证的情况下可以使用个人令牌；</p></li><li><p>如果要在 GitHub Actions 工作流中使用 API，则 GitHub 建议使用内置 GITHUB_TOKEN 进行身份验证</p></li></ol><p><a href="https://octokit.github.io/rest.js/v18/#issues-list-for-repo" target="_blank" rel="noreferrer">api文档</a> 内含有很多方法，可操作 repository、pull request、users、comment、issue...，可以用它开发出有创意且实用的工具。</p><ul><li><strong>获取issues方法</strong></li></ul><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">data</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> octokit.issues.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">listForRepo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    owner,</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//用户</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    repo,</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//仓库</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    sort: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;created&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    state: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;all&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    per_page: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  })</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div>`,9),p=[n];function r(l,h,o,k,c,d){return t(),i("div",null,p)}const b=s(e,[["render",r]]);export{E as __pageData,b as default};
