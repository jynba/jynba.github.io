import{_ as a,o as e,c as s,O as n}from"./chunks/framework.ed8d50c3.js";const b=JSON.parse('{"title":"docker 命令","description":"","frontmatter":{},"headers":[],"relativePath":"cs/net/docker_command.md","lastUpdated":1695722416000}'),r={name:"cs/net/docker_command.md"},o=n(`<h1 id="docker-命令" tabindex="-1">docker 命令 <a class="header-anchor" href="#docker-命令" aria-label="Permalink to &quot;docker 命令&quot;">​</a></h1><h2 id="docker-常用命令" tabindex="-1">docker 常用命令 <a class="header-anchor" href="#docker-常用命令" aria-label="Permalink to &quot;docker 常用命令&quot;">​</a></h2><h3 id="启动挂载容器" tabindex="-1">启动挂载容器 <a class="header-anchor" href="#启动挂载容器" aria-label="Permalink to &quot;启动挂载容器&quot;">​</a></h3><h3 id="容器导出与导入" tabindex="-1">容器导出与导入 <a class="header-anchor" href="#容器导出与导入" aria-label="Permalink to &quot;容器导出与导入&quot;">​</a></h3><h3 id="镜像导出与导入" tabindex="-1">镜像导出与导入 <a class="header-anchor" href="#镜像导出与导入" aria-label="Permalink to &quot;镜像导出与导入&quot;">​</a></h3><p>以上两种只针对容器，不包括挂载的文件；镜像体积大，因为包括了历史记录等等</p><h3 id="数据卷导出与导入" tabindex="-1">数据卷导出与导入 <a class="header-anchor" href="#数据卷导出与导入" aria-label="Permalink to &quot;数据卷导出与导入&quot;">​</a></h3><h4 id="docker-数据卷的备份-导出" tabindex="-1">docker 数据卷的备份 (导出) <a class="header-anchor" href="#docker-数据卷的备份-导出" aria-label="Permalink to &quot;docker 数据卷的备份 (导出)&quot;">​</a></h4><div class="language-dockerfile line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dockerfile</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">//多个数据卷的备份</span></span>
<span class="line"><span style="color:#A6ACCD;">docker run --volumes-from 数据卷容器ID/数据卷容器名称 -v 宿主机备份目录:容器备份目录 镜像ID/镜像名称[:版本号] tar cvf 容器目录/数据卷压缩文件(格式为tar压缩文件) 容器数据卷文件1/目录1 容器数据卷文件2/目录2</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">docker run --volumes-from mycentos -v $(pwd):/backup centos tar cvf /backup/newcentos.tar /containerVolume1 /containerVolume2</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="docker-数据卷的迁移与恢复-导入" tabindex="-1">docker 数据卷的迁移与恢复 (导入) <a class="header-anchor" href="#docker-数据卷的迁移与恢复-导入" aria-label="Permalink to &quot;docker 数据卷的迁移与恢复 (导入)&quot;">​</a></h4><div class="language-dockerfile line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dockerfile</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">//单个数据卷 与 多个数据卷的 数据卷恢复指令相同</span></span>
<span class="line"><span style="color:#A6ACCD;">docker run --volumes-from 需要恢复数据的数据卷容器ID/名称 -v 宿主机备份目录:容器备份目录 镜像ID/镜像名称[:版本号] tar xvf 容器备份目录/数据卷压缩文件(格式为tar压缩文件)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">docker run --volumes-from mycentos -v $(pwd):/backup centos tar xvf /backup/newcentos.tar</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">//如果想要在执行完数据恢复指令后，删除临时容器，请在run 后面加上--rm属性，表示在执行完后立即删除该容器</span></span>
<span class="line"><span style="color:#A6ACCD;">docker run --rm --volumes-from mycentos -v $(pwd):/backup centos tar xvf /backup/newcentos.tar</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>UI</p><p>河网</p><p>数据库</p>`,14),l=[o];function c(t,p,i,d,u,m){return e(),s("div",null,l)}const k=a(r,[["render",c]]);export{b as __pageData,k as default};
