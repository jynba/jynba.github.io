import{_ as s,c as a,o as i,a5 as e}from"./chunks/framework.CByBVyi2.js";const b=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"timeline/issue-76.md","filePath":"timeline/issue-76.md","lastUpdated":1745467319000}'),t={name:"timeline/issue-76.md"},n=e(`<div class="tip custom-block"><p class="custom-block-title">原文地址</p><p><a href="https://github.com/jynba/jynba.github.io/issues/76" target="_blank" rel="noreferrer">服务器上配置校验文件，最简单方便的方法（nginx配置返回content） | GitHub</a></p></div><h3 id="服务器上配置校验文件" tabindex="-1">服务器上配置校验文件 <a class="header-anchor" href="#服务器上配置校验文件" aria-label="Permalink to &quot;服务器上配置校验文件&quot;">​</a></h3><ul><li>小程序需要新增业务域名、普通二维码跳转等时，经常会提示需要在域名上添加校验文件，有一种无需上传校验文件的方式，因为校验文件通常是一串字符串，我们可以直接返回Content的方式，直接配置代理 下图中我是在<a href="https://github.com/jynba/jynba.github.io/issues/62" target="_blank" rel="noreferrer">nginx proxy manager</a>中配置，极其方便。（<strong>另外，亲测可知：校验完删除了也不会影响已经通过的域名</strong>） <img src="https://github.com/user-attachments/assets/aefb3819-bad0-425c-a148-55d08b192891" alt="Image"></li></ul><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">location</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /xxxx.txt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    add_header</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Content-Type</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> text/plain</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 200</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;d72xxxxxxxxxxxxx42&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div>`,4),l=[n];function r(p,h,o,d,c,k){return i(),a("div",null,l)}const g=s(t,[["render",r]]);export{b as __pageData,g as default};
