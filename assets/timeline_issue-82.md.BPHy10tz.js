import{_ as e,c as i,o as t,a5 as o}from"./chunks/framework.CByBVyi2.js";const f=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"timeline/issue-82.md","filePath":"timeline/issue-82.md","lastUpdated":1753772429000}'),a={name:"timeline/issue-82.md"},n=o('<h3 id="背景" tabindex="-1">背景 <a class="header-anchor" href="#背景" aria-label="Permalink to &quot;背景&quot;">​</a></h3><div class="tip custom-block"><p class="custom-block-title">原文地址</p><p><a href="https://github.com/jynba/jynba.github.io/issues/82" target="_blank" rel="noreferrer">自动化从Figma导出图标并生成Iconify的npm包更新到项目 | GitHub</a></p></div><p>在公司项目的日常开发中，UI设计师会频繁更新 Figma 上的图标资源，而前端项目需要和UI设计师沟通，手动导出图标，添加到项目中。 为了避免手动导出图标等重复劳动，计划搭建一套自动化的 图标资源管理与分发流程，核心目标包括：</p><ul><li>设计资源自动同步：通过 Figma 插件触发工作流，将最新图标自动拉取、转换为前端可用格式（Iconify 组件），并发布为 npm 包，减少手动导出与版本管理的工作量。</li><li>前端项目依赖自动更新：通过 Renovate 机器人，自动检测 npm 包更新，自动创建合并请求，保证项目和相关业务项目始终使用最新图标。</li><li>降低沟通成本：通过自动化流程，前端开发、设计之间减少重复沟通，缩短设计更新到项目落地的时间。</li><li>组件按需引入优化： Iconify 组件支持 Vite 的 IconResolver 按需加载，提升开发体验和构建效率。</li></ul><h3 id="已实现" tabindex="-1">已实现 <a class="header-anchor" href="#已实现" aria-label="Permalink to &quot;已实现&quot;">​</a></h3><p><strong>figma-iconify-bot 项目</strong></p><p><a href="https://github.com/jynba/figma-iconify-bot" target="_blank" rel="noreferrer">figma-iconify-bot项目地址</a></p><ul><li>通过 Figma 插件触发 GitHub Action Dispatch</li><li>自动从 Figma 拉取 SVG 图标</li><li>使用 <code>@iconify/tools</code> 转换为 Iconify JSON</li><li>将 iconify json 转成 vue component，如<code>@element-plus/icons-vue</code>；项目可通过 resolver 按需引入或 ts 全量引入</li><li>自动更新 GitHub 仓库源代码，发布/更新 npm 包版本 (svg/json/vue component 三个版本)</li></ul><p><strong>icon-demo-app 项目</strong>（需要应用的项目demo）</p><p><a href="https://github.com/jynba/icon-demo-app.git" target="_blank" rel="noreferrer">icon-demo-app项目地址</a></p><p><a href="https://jynba.github.io/icon-demo-app/" target="_blank" rel="noreferrer">icon-demo-app演示地址</a></p><ul><li>添加 renovate 自动mr；项目定时触发renovate，自动保持最新的npm依赖</li></ul>',12),r=[n];function l(s,c,p,m,u,d){return t(),i("div",null,r)}const h=e(a,[["render",l]]);export{f as __pageData,h as default};
